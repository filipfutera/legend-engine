[
  {
    "CategoryName": "UserAuthenticationError",
    "Types": [
      {
        "TypeName": "CredentialsError",
        "Exceptions": [
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "A 'Secure Connect' or a Kerberos connection can't be built outside of a user call|Failed to initialize pool"
          },
          {
            "ExceptionName": "UnsupportedOperationException",
            "MessageRegex": "Kerberos|credential"
          }
        ],
        "TypeExceptionRegex": "Pool|Kerberos|SecureConnect|credential[s]?"
      },

      {
        "TypeName": "PermissionsError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": "Permission|Access"
      }
    ],
    "Keywords": ["kerberos", "credential", "username", "password", "permission", "initialize pool"]
  },



  {
    "CategoryName": "UserExecutionError",
    "Types": [
      {
        "TypeName": "QueryError",
        "Exceptions": [
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Can't find a match for function"
          }
        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "DatabaseNotFoundError",
        "Exceptions": [
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Can't find database"
          }
        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "UserRequestError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "ServiceUpdateError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      }

    ],
    "Keywords": ["[a-zA-Z]+ '.*' not found"]
  },



  {
    "CategoryName": "InternalServerError",
    "Types": [
      {
        "TypeName": "MissingItemError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": "Missing|NotFound"
      },

      {
        "TypeName": "APIError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "JavaError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "ServerOverloadError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "ConfigurationError",
        "Exceptions": [
          {
            "ExceptionName": "RuntimeException",
            "MessageRegex": "has not been configured properly"
          }
        ],
        "TypeExceptionRegex": "Config[a-z]*"
      },

      {
        "TypeName": "IOError",
        "Exceptions": [
          {
            "ExceptionName": "FlatDataSchemaParseException",
            "MessageRegex": "Unexpected token"
          }
        ],
        "TypeExceptionRegex": "Read[A-Z]+|Write|Input|Output"
      }
    ],
    "Keywords": ["overload"]
  },



  {
    "CategoryName": "ServerExecutionError",
    "Types": [

      {
        "TypeName": "DatabaseError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": "SQL"
      },

      {
        "TypeName": "GrammarToJSONConversionError",
        "Exceptions": [
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Unexpected token|Missing table or alias for column|Bracket operation is not supported|Field '.*' is required"
          }
        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "PureError",
        "Exceptions": [
          {
            "ExceptionName": "PureExecutionException",
            "MessageRegex": "cannot cast [a ]?collection of size 0 to multiplicity"
          },
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Engine was unable to load information from the Pure SDLC|Can't find mapping"
          }
        ],
        "TypeExceptionRegex": "Pure"
      },

      {
        "TypeName": "JSONError",
        "Exceptions": [
          {
            "ExceptionName": "FlatDataSchemaParseException",
            "MessageRegex": "Unexpected token"
          }
        ],
        "TypeExceptionRegex": "JSON"
      },

      {
        "TypeName": "GraphError",
        "Exceptions": [
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Error in.*Can't find [the ]?(property|store|type|profile|packageable element|Connection|SchemaSet|table.*in schema.*and database.*)"
          },
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Error in.*[all required service parameters should be mapped|Mapping error: the join .* does not contain the source table|Milestone column.*not found on table definition|Collection element must have a multiplicity]?"
          }
        ],
        "TypeExceptionRegex": "Graph"
      },

      {
        "TypeName": "JavaErrors",
        "Exceptions": [
          {
            "ExceptionName": "IllegalArgumentException",
            "MessageRegex": "Missing external parameter"
          },
          {
            "ExceptionName": "EngineException",
            "MessageRegex": "Can't find property .* in (class|association)"
          }
        ],
        "TypeExceptionRegex": "IllegalArgumentException"
      },

      {
      "TypeName": "ServiceRequestError",
      "Exceptions": [
        {
          "ExceptionName": "IllegalArgumentException",
          "MessageRegex": "Invalid provided parameter|Reprocessing sql failed with vars"
        },
        {
          "ExceptionName": "RuntimeException",
          "MessageRegex": "HTTP request.*failed with error|Input stream was not provided|The following PackageableElementPointers.*do not exist in the project data loaded from the metadata server"
        },
        {
          "ExceptionName": "EngineException",
          "MessageRegex": "Can't resolve the builder for function|Can't find service"
        }
      ],
      "TypeExceptionRegex": ""
      },

      {
        "TypeName": "FreemarkerError",
        "Exceptions": [
          {
            "ExceptionName": "RuntimeException",
            "MessageRegex": "Issue processing freemarker function"
          }
        ],
        "TypeExceptionRegex": ""
      },

      {
        "TypeName": "RegexError",
        "Exceptions": [

        ],
        "TypeExceptionRegex": ""
      }

    ],
    "Keywords": ["mapping error","Error in '.*::.*':" ]
  },



  {
    "CategoryName": "OtherError",
    "Types": [
      {
        "TypeName": "ConnectionError",
        "Exceptions": [
          {
            "ExceptionName": "ConnectionException",
            "MessageRegex": ""
          }
        ],
        "TypeExceptionRegex": "Connection|Timeout"
      },

      {
        "TypeName": "TestingError",
        "Exceptions": [
          {
            "ExceptionName": "PureAssertFailException",
            "MessageRegex": "exception occurred executing service test suites"
          }
        ],
        "TypeExceptionRegex": ""
      }
    ],
    "Keywords": ["test|timeout"]
  }
]
